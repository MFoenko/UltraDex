package com.mikhail.pokedex.data;
import android.database.*;
import android.graphics.*;
import android.os.*;
import java.util.*;

public class PokedexClasses {
	public static class PokedexEntry {
		
        private long id;
        private String dispId;
        private String speciesName;
        private int[] stats;
        private int[] type;
		private String suffix;
		private int order;
		private boolean isDefault = true;
		private boolean hasIcon = true;
        
		private Bitmap icon;

		public static final int SORT_BY_ID_UP = 1;
		public static final int SORT_BY_ID_DOWN = -1;
		public static final int SORT_BY_NAME_UP = 2;
		public static final int SORT_BY_NAME_DOWN = -2;
		public static final int SORT_BY_TYPE_UP = 3;
		public static final int SORT_BY_TYPE_DOWN = -3;

		public PokedexEntry(long id, String dispId, String speciesName, int[] stats, int[] type, String suffix, int order, boolean isDefault, boolean hasIcon) {
			this.id = id;
			this.dispId = dispId;
			this.speciesName = speciesName;
			this.stats = stats;
			this.type = type;
			this.suffix = suffix;
			this.order = order;
			this.isDefault = isDefault;
			this.hasIcon = hasIcon;
		}

        public PokedexEntry(long l, String string, String string2, int[] arrn, int[] arrn2, String string3, int n) {
            this.id = l;
            this.dispId = string;
            this.speciesName = string2;
            this.stats = arrn;
            this.type = arrn2;
            this.suffix = string3;
            this.order = n;
        }

        public PokedexEntry(long l, String string, String string2, int[] arrn, int[] arrn2, String string3, int n, boolean bl) {
            this.id = l;
            this.dispId = string;
            this.speciesName = string2;
            this.stats = arrn;
            this.type = arrn2;
            this.suffix = string3;
            this.order = n;
            this.isDefault = bl;
        }

		public void setIcon(Bitmap icon) {
			this.icon = icon;
		}

		public Bitmap getIcon() {
			return icon;
		}

		public void setDispId(String dispId) {
			this.dispId = dispId;
		}

		public String getDispId() {
			return dispId;
		}

		public void setId(long id) {
			this.id = id;
		}

		public long getId() {
			return id;
		}

		public void setIsDefault(boolean isDefault) {
			this.isDefault = isDefault;
		}

		public boolean isDefault() {
			return isDefault;
		}

		public void setOrder(int order) {
			this.order = order;
		}

		public int getOrder() {
			return order;
		}

		public void setSpeciesName(String speciesName) {
			this.speciesName = speciesName;
		}

		public String getSpeciesName() {
			return speciesName;
		}

		public void setStats(int[] stats) {
			this.stats = stats;
		}

		public int[] getStats() {
			return stats;
		}

		public void setSuffix(String suffix) {
			this.suffix = suffix;
		}

		public String getSuffix() {
			return suffix;
		}

		public void setType(int[] type) {
			this.type = type;
		}

		public int[] getType() {
			return type;
		}

		public String getGifName() {
			if (suffix != null && !isDefault)
				return dispId + "-" + suffix;
			else
				return dispId;
		}

		public String getIconName() {
			if(suffix != null && hasIcon)
				return Integer.parseInt(dispId) +"-" + suffix + ".png";
			else
			return Integer.parseInt(dispId) + ".png";
		}


		public int compareTo(PokedexEntry other, int sortBy) {
			switch (sortBy) {
				case SORT_BY_ID_DOWN:
					return getDispId().compareTo(other.getDispId());
				case SORT_BY_ID_UP:
					return other.getDispId().compareTo(getDispId());
				case SORT_BY_NAME_DOWN:
					return getSpeciesName().compareTo(other.getSpeciesName());
				case SORT_BY_NAME_UP:
					return other.getSpeciesName().compareTo(getSpeciesName());
				case SORT_BY_TYPE_UP:
					if (getType()[0] == other.getType()[0]) {
						if (getType().length == 2 || other.getType().length == 2) {
							if (getType().length == 2 && other.getType().length == 2) {
								return getType()[1] - other.getType()[1];
							} else {
								if (getType().length == 2) {
									return 1;
								} else {
									return -1;
								}

							}
						} else {
							return 0;
						}
					} else {
						return getType()[0] - other.getType()[0];
					}
				case SORT_BY_TYPE_DOWN:
					if (getType()[0] == other.getType()[0]) {
						if (getType().length == 2 || other.getType().length == 2) {
							if (getType().length == 2 && other.getType().length == 2) {
								return other.getType()[1] - getType()[1];
							} else {
								if (getType().length == 2) {
									return -1;
								} else {
									return 1;
								}

							}
						} else {
							return 0;
						}
					} else {
						return other.getType()[0] - getType()[0];
					}
				default:
					return 0;
			}
		}


	}


	public static class PokedexListItem implements Parcelable {

		private int id;
		private String dispId;
		private String speciesName;
		private Bitmap icon;

		public static final int SORT_BY_ID_UP = 1;
		public static final int SORT_BY_ID_DOWN = -1;
		public static final int SORT_BY_NAME_UP = 2;
		public static final int SORT_BY_NAME_DOWN = -2;

		public PokedexListItem(int id, String dispId, String speciesName) {
			this.id = id;
			this.dispId = dispId;
			this.speciesName = speciesName;
		}

		public void setIcon(Bitmap icon) {
			this.icon = icon;
		}


		public String getDispId() {
			return dispId;
		}

		public int getId() {
			return id;
		}

		public String getSpeciesName() {
			return speciesName;
		}

		public Bitmap getIcon() {
			return icon;
		}

		public String getIconName() {
			return id + ".png";
		}

		@Override
		public int describeContents() {
			return 0;
		}

		@Override
		public void writeToParcel(Parcel p1, int p2) {
			p1.writeInt(id);
			p1.writeString(dispId);
			p1.writeString(speciesName);
		}


		public static final Parcelable.Creator<PokedexListItem> CREATOR = new Parcelable.Creator<PokedexListItem>() {
			public PokedexListItem createFromParcel(Parcel in) {

				int id = in.readInt();
				String dispId = in.readString();
				String name = in.readString();

				return new PokedexListItem(id, dispId, name);
			}

			public PokedexListItem[] newArray(int size) {
				return new PokedexListItem[size];
			}
		};

		public int compareTo(PokedexListItem other, int sortBy) {
			switch (sortBy) {
				case SORT_BY_ID_DOWN:
					return getId() - other.getId();
				case SORT_BY_ID_UP:
					return other.getId() - getId();
				case SORT_BY_NAME_DOWN:
					return getSpeciesName().compareTo(other.getSpeciesName());
				case SORT_BY_NAME_UP:
					return other.getSpeciesName().compareTo(getSpeciesName());
				default:
					return 0;
			}
		}

	}

	public static class MoveListItem implements Parcelable {
		private int id;
		private String disp;
		private String name;

		public MoveListItem(int id, String disp, String name) {
			this.id = id;
			this.disp = disp;
			this.name = name;
		}

		public MoveListItem(int id, String name) {
			this(id, "", name);
		}

		public String getDisp() {
			return disp;
		}

		public int getId() {
			return id;
		}

		public String getName() {
			return name;
		}

		@Override
		public int describeContents() {
			return 0;
		}

		@Override
		public void writeToParcel(Parcel p1, int p2) {
			p1.writeInt(id);
			p1.writeString(name);
			p1.writeString(disp);
		}

		public static final Parcelable.Creator<MoveListItem> CREATOR = new Parcelable.Creator<MoveListItem>(){

			@Override
			public PokedexClasses.MoveListItem createFromParcel(Parcel p1) {
				int id = p1.readInt();
				String name = p1.readString();
				String disp = p1.readString();
				return new MoveListItem(id, disp, name);
			}

			@Override
			public PokedexClasses.MoveListItem[] newArray(int p1) {
				return new MoveListItem[p1];
			}


		};





	}


	public static class Move {
        public static final int DAMAGE_CLASS_PHYSICAL = 1;
        public static final int DAMAGE_CLASS_SPECIAL = 2;
        public static final int DAMAGE_CLASS_STATUS = 0;
		public static final int SORT_BY_ID_ASC = 1;
		public static final int SORT_BY_ID_DESC = -1;
		public static final int SORT_BY_NAME_ASC = 2;
		public static final int SORT_BY_NAME_DESC = -2;
		public static final int SORT_BY_TYPE_ASC = 3;
		public static final int SORT_BY_TYPE_DESC = -3;
		public static final int SORT_BY_LEARN_ASC = 4;
		public static final int SORT_BY_LEARN_DESC = -4;
		


        private int accuracy;
        private int damageClass;
        private String desc;
        private int id;
        private String learn;
        private String name;
        private int power;
        private int pp;
        int priority;
        int targets;
        private int type;

        public Move(int n, String string, int n2, int n3, int n4, int n5, int n6, int n7, int n8, String string2) {
            this.id = n;
            this.name = string;
            this.type = n2;
            this.damageClass = n3;
            this.power = n4;
            this.accuracy = n5;
            this.pp = n6;
            this.priority = n7;
            this.targets = n8;
            this.desc = string2;
        }

        public Move(int n, String string, int n2, int n3, int n4, int n5, int n6, int n7, int n8, String string2, String string3) {
            this.id = n;
            this.name = string;
            this.type = n2;
            this.damageClass = n3;
            this.power = n4;
            this.accuracy = n5;
            this.pp = n6;
            this.priority = n7;
            this.targets = n8;
            this.desc = string2;
            this.learn = string3;
        }

        public int getAccuracy() {
            return this.accuracy;
        }

        public int getDamageClass() {
            return this.damageClass;
        }

        public String getDesc() {
            return this.desc;
        }

        public int getId() {
            return this.id;
        }

        public String getLearn() {
            return this.learn;
        }

        public String getName() {
            return this.name;
        }

        public int getPower() {
            return this.power;
        }

        public int getPp() {
            return this.pp;
        }

        public int getPriority() {
            return this.priority;
        }

        public int getTargets() {
            return this.targets;
        }

        public int getType() {
            return this.type;
        }

        public void setDesc(String string) {
            this.desc = string;
        }
		public int compareTo(Move other, int sortBy) {
			switch (sortBy) {
				case SORT_BY_ID_DOWN:
					return getId() - other.getId();
				case SORT_BY_ID_UP:
					return other.getId() - getId();
				case SORT_BY_NAME_DOWN:
					return getName().compareTo(other.getName());
				case SORT_BY_NAME_UP:
					return other.getName().compareTo(getName());
				case SORT_BY_TYPE_DOWN:
					return  getType() - other.getType();
				case SORT_BY_TYPE_UP:
					return other.getType() - this.getType();
				case SORT_BY_LEARN_DOWN:
					return getLearn().compareTo(other.getLearn());
				default:
					return 0;
			}
		}




    }

    public static class Evolution {
        private long evolution;
        private int level;
        private String method;

        public Evolution(long l, String string) {
            this.evolution = l;
            this.method = string;
        }

        public Evolution(long l, String string, int n) {
            this.evolution = l;
            this.method = string;
            this.level = n;
        }

        public long getEvolutionId() {
            return this.evolution;
        }

        public int getLevel() {
            return this.level;
        }

        public String getMethod() {
            return this.method;
        }

        @Override
        public String toString() {
            return new StringBuffer().append(new StringBuffer().append(this.getMethod()).append(" ").toString()).append(this.getEvolutionId()).toString();
        }
    }

}
